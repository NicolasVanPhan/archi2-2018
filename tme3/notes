
Points de cours :

Le cache ici est Write Through : les rqt d'ecriture sont forwarded vers
la memoire, comme si le cache n'existait pas.

Le cache est bloquant : Tant qu'une requete n'a pas ete satisfaite, le proc
est gele.

Interface IREQ :
	addr	(30)
	valid	(1)	le proc effectue une requete ou non
	mode	(1)	le proc est en mode U ou S

Interface IRSP :
	instr	(32)	l'instruction lue depuis le cache/la memoire
	valid	(1)	l'instruction donnee est valide ou pas
				(aka le proc doit geler ou pas)
	error	(1)	l'adresse fournie est illegale
				(l'OS va tuer le fautif)

Interface DREQ :
	addr	(30)
	valid	(1)
	mode	(1)
	type	(3)	READ, WRITE, Linked-Load, Store-cond, XTNREAD, XTNWRITE
	wdata	(32)	la donnee a ecrire
	be	(4)	pour byte-enable, indique quels octets du mot ecrire

Interface DRSP :
	rdata	(32)	la donnee lue (dans le cas write ce signal est inutile)
	valid	(1)	read:la donne lue est valide / write:la rqt a ete prise
	error	(1)


LES DIFFERENTES SITUATIONS :
============================

Une instruction est demandee			chaque cycle
	Il y a hit				(N-1)/N cycles, N=taille ligne
	Il y a miss				1/N

		Dans ce cas IFSM emet une requete de lecture vers PIBUSFSM
		Attend la reponse (le proc est gele pdnt ce temps la)
		Puis stocke la reponse dans le cache


a completer

C1 ] 

Adresse 1ere instruction main est
Le code commence par .word main puis space 124,
ca veut dire que le code commencant au label main sera place ici,
le space 124 c'est lespace pour tout le code.

@main = @debut segment = 0x00400000;

@debut loop = @debut main + 4*3 = 0x0040000c

C2 ]

@base 1 = SEGBASE + 124 = 0x0040007c

@base 2 = @base 1 + 4*20 + 48 = 0x004000fc

@base 3 = @base 2 + 4*20 + 48 = 0x0040017c

C3 ]
C'est une optimisation de code permettant d'avoir moins de gel,
apres le bne de toute facon il faut placer un instruction dans le Delayed Slot,
autant de pas mettre un Nop mais une instruction utile.

C4 ]
Nbre cycles / iteration = nb instructions + nb cycles gel
= 7 + 0 = 7 cycles/it

0x00400000
BYTE = 0
SET = 0
TAG = 0000 0000 0100 0000 0000 0000 0 = 0x8000


D1 ]
Les lignes de cache mesurent 4 mots = 16 octets = 2^4 octets
donc le champ BYTE comporte 4 bits.

Le cache comporte 8 cases donc 8 ensemble (direct mapping)
donc le champ SET comporte 3 bits. 

Par soustraction, le champ TAG comporte 32 - 4 - 3 = 25 bits


